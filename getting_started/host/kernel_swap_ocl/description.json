{
    "runtime": ["OpenCL"],
    "example" : "Vector Add - Vector Multiplication for XPR-NON_XPR Devices",
    "overview" : [
        "This example shows how host can swap the kernels and share same buffer between two kernels exist in separate binary containers. For Non-XPR(Extended Partial Reconfiguration) Specific Devices, device memory can persist buffer data so both kernels can share data directly. Whereas in XPR devices, device memory does not persist the buffer data so host has to migrate data from device to host memory before swapping the next kernel. After kernel swap, host has to migrate the buffer back to device."
    ],
    "key_concepts": [ "Handling Buffer sharing across multiple binaries for XPR-NON_XPR Platform", "Multiple Kernel Binaries" , "Buffer sharing across Multiple binaries"],
    "keywords": [ "clEnqueueMigrateMemObjects()", "CL_MIGRATE_MEM_OBJECT_HOST"],
    "os": [
        "Linux"
    ],
    "libs": [
        "xcl2"
    ],
    "em_cmd" : "./vmulvadd",
    "hw_cmd" : "../../../utility/nimbix/nimbix-run.py -- ./vmulvadd",
    "accelerators": [
        {
            "name": "krnl_vmul", 
            "location": "src/krnl_vmul.cl", 
            "container": "krnl_vmul"
        }, 
        {
            "name": "krnl_vadd", 
            "location": "src/krnl_vadd.cl", 
            "container": "krnl_vadd"
        }
    ],
    "contributors" : [
        {
            "group": "Xilinx",
            "url" : "http://www.xilinx.com"
        }
    ],
    "revision" : [
        {
            "date" : "SEP2017",
            "version": "1.0",
            "description": "Initial Xilinx Release"
        }
    ]

}
