{
    "example": "Multiple FPGA Devices Execution Concurrently (CL)",
    "overview": [
        "This example show how to take advantage of multiple FPGAs on a system. It will show how to initialized an OpenCL context, allocate memory on the two devices and execute a kernel on each FPGA."
    ],
    "key_concepts": [ "OpenCL API" , "Multi-FPGA Execution", "Event Handling"],
    "keywords": [ "cl_device_id", "clGetDeviceIDs()"],
    "os": [
        "Linux"
    ],
    "libs": [
        "xcl"
    ],
    "board": ["xilinx:adm-pcie-7v3:1ddr", "xilinx:adm-pcie-ku3:2ddr-xpr","xilinx:xil-accel-rd-ku115:4ddr-xpr"],
    "cmd_args" : "BUILD/default.xclbin",
    "em_cmd": "./multiple_devices xclbin/vector_addition.<emulation target>.xilinx_adm-pcie-ku3_2ddr_3_1.xclbin",
    "hw_cmd": "../../../utility/nimbix/nimbix-run.py -- ./multiple_devices xclbin/vector_addition.hw.xilinx_adm-pcie-ku3_2ddr_3_1.xclbin",
    "accelerators": [
        {
            "container": "vector_addition", 
            "name": "vadd", 
            "location": "src/vector_addition.cl"
        }
    ],
    "contributors" : [
        {
            "group": "Xilinx",
            "url" : "http://www.xilinx.com"
        }
    ],
    "revision" : [
        {
            "date" : "DEC2016",
            "version": "1.0",
            "description": "Initial Xilinx Release"
        }
    ]
}
